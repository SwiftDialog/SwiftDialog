#!/bin/sh

dialogpath="/Library/Application Support/Dialog/Dialog.app"
dialogbin="$dialogpath/Contents/MacOS/Dialog"

echoerr() { echo "$@" 1>&2; }

# Check to make sure we have a binary to run
if [ ! -x "$dialogbin" ]; then
	echoerr "ERROR: Cannot find swiftDialog binary at $dialogbin"
	exit 255
fi

# If we're running as root and the console user isnt root, relaunch this script as the user.
if [ `/usr/bin/id -u` -eq 0 ]; then
	currentUser=`/bin/echo "show State:/Users/ConsoleUser" | /usr/sbin/scutil | /usr/bin/awk '/Name :/ { print $3 }'`
	uid=`/usr/bin/id -u "$currentUser"`
	if [ "$USER" != "$currentUser" ]; then
		if [ "$currentUser" != "loginwindow" ]; then
			echoerr "dialog: restarting $0 as $currentUser uid=$uid"
			exec launchctl asuser "$uid" sudo -u "$currentUser" $0 "$@"
		else
			unset loginwindow
			for arg; do
				[ " $arg " = " --loginwindow " ] && { loginwindow=true ; break; }
			done
			if [ ! $loginwindow ]; then
				echoerr "ERROR: no user logged in AND --loginwindow not specified"
				exit 255
			fi
		fi
	fi
fi

# determining if commandfile specified on cmdline
unset commandfile nextarg
for arg; do
	[ $nextarg ] && { unset nextarg ; commandfile=$arg; break; }
	[ " $arg " = " --commandfile " ] && { nextarg=true; continue; }
done

if [ -n "$commandfile" ]; then
	if [ ! -r "$commandfile" ]; then
		# advise if the running user does not have read access to the command file
		echoerr "WARNING: custom command file \"${commandfile}\" is not readable by $USER"
	fi
fi

exec "$dialogbin" "$@"
